plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.gm2dev'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(25)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// https://www.baeldung.com/spring-boot-actuators
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	// Database
	implementation 'org.postgresql:postgresql'
    // Migrations Manager
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'

	// JWT and Security
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.6'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.6'

	// Documentation
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

	// Monitoring and Observability
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'io.zipkin.reporter2:zipkin-reporter-brave'

	// Utils
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	// Development
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	// developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	runtimeOnly 'com.h2database:h2'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
	testImplementation 'com.github.dasniko:testcontainers-keycloak:3.4.0'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Spring Boot BuildPacks configuration
tasks.named('bootBuildImage') {
	imageName = "demo-spring:${version}"
	tags = ["demo-spring:latest"]

	environment = [
		'BP_JVM_VERSION': '25',
		'BPE_SPRING_PROFILES_ACTIVE': 'prod'
	]
}

// TestContainers configuration
dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:1.20.4"
	}
}
